name: Build

on:
  push:
    branches-ignore:
      - hotfix/*
      - release/*
  pull_request:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:  # allow Action to be run manually

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      statuses: write
    steps:
      - name: Checkout with GIT
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.SUPER_LINTER_TOKEN }}
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0

      - name: Lint
        uses: super-linter/super-linter@v8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IGNORE_GITIGNORED_FILES: true
          VALIDATE_EDITORCONFIG: true
          VALIDATE_ENV: true
          FIX_ENV: true
          VALIDATE_GIT_MERGE_CONFLICT_MARKERS: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITHUB_ACTIONS_ZIZMOR: true
          VALIDATE_JAVASCRIPT_PRETTIER: true
          FIX_JAVASCRIPT_PRETTIER: true
          VALIDATE_JSONC: true
          FIX_JSONC: true
          VALIDATE_JSONC_PRETTIER: true
          FIX_JSONC_PRETTIER: true
          VALIDATE_MARKDOWN: true
          FIX_MARKDOWN: true
          VALIDATE_MARKDOWN_PRETTIER: true
          FIX_MARKDOWN_PRETTIER: true
          VALIDATE_RENOVATE: true
          VALIDATE_YAML: true
          VALIDATE_YAML_PRETTIER: true
          FIX_YAML_PRETTIER: true

      - name: Commit and push linting fixes
        if: github.event_name == 'pull_request'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: ${{ github.event.pull_request.head.ref || github.head_ref || github.ref }}
          commit_author: super-linter <super-linter@super-linter.dev>
          commit_message: "chore: fix linting issues"
  build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout with GIT
        uses: actions/checkout@v5

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: temurin
          java-version-file: .tool-versions

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary-as-pr-comment: on-failure
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Build with Gradle
        run: ./gradlew build

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: success() || failure()  # run this step even if previous step failed
        with:
          name: test-results
          path: "build/test-results/jvmKotest/TEST-*.xml"

      - name: Upload build reports
        uses: actions/upload-artifact@v4
        if: success() || failure()  # run this step even if previous step failed
        with:
          name: build-reports
          path: "**/build/reports/"
