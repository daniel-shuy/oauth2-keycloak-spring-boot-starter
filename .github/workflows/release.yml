name: Release

on:
  push:
    branches:
      - hotfix/*
      - release/*
  workflow_dispatch:  # allow Action to be run manually

env:
  BRANCH: ${{ github.ref_name }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # required to merge branch
      packages: write # required to publish to GitHub Packages
    steps:
      - name: Validate branch
        if: startsWith(env.BRANCH, 'hotfix/') != true && startsWith(env.BRANCH, 'release/') != true
        run: echo "::error ::Can only release from Hotfix/Release branch"

      - id: get_version_from_branch
        name: Get version from branch
        run: echo "version=${BRANCH##*/}" >> "$GITHUB_OUTPUT"

      - name: Checkout with GIT
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Set up GIT user
        uses: fregante/setup-git-user@v2

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.SIGNING_KEY }}
          passphrase: ${{ secrets.SIGNING_PASSWORD }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true

      - name: Publish package with Gradle
        run: >-
          ./gradlew release
          -Prelease.useAutomaticVersion=true
          -Prelease.releaseVersion=${{ steps.get_version_from_branch.outputs.version }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

      - name: Merge to main
        if: startsWith(env.BRANCH, 'release/')
        uses: devmasx/merge-branch@master
        with:
          type: now
          target_branch: main
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete branch
        run: git push origin --delete $BRANCH
