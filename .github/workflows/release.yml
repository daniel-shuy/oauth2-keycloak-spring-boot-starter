name: Release

on:
  push:
    branches:
      - hotfix/*
      - release/*
  workflow_dispatch:  # allow Action to be run manually

env:
  BRANCH: ${{ github.ref_name }}
  DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Validate branch
        if: startsWith(env.BRANCH, 'hotfix/') != true && startsWith(env.BRANCH, 'release/') != true
        run: echo "::error ::Can only release from Hotfix/Release branch"

      - id: get_version_from_branch
        name: Get version from branch
        run: echo "version=${BRANCH##*/}" >> "$GITHUB_OUTPUT"

      - name: Checkout with GIT
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5
        with:
          distribution: temurin
          java-version-file: .tool-versions

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@48b5f213c81028ace310571dc5ec0fbbca0b2947 # v4
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: Set up GIT user
        uses: fregante/setup-git-user@024bc0b8e177d7e77203b48dab6fb45666854b35 # v2

      - name: Publish package with Gradle
        run: >-
          ./gradlew release
          -Prelease.useAutomaticVersion=true
          -Prelease.releaseVersion=${{ steps.get_version_from_branch.outputs.version }}
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
  merge:
    name: Merge to default branch
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - if: startsWith(env.BRANCH, 'release/')
        uses: devmasx/merge-branch@6ec8363d74aad4f1615d1234ae1908b4185c4313 # master
        with:
          type: now
          head_to_merge: ${{ env.BRANCH }}
          target_branch: ${{ env.DEFAULT_BRANCH }}
          message: Merge branch '${{ env.BRANCH }}'
          github_token: ${{ secrets.GITHUB_TOKEN }}
  delete:
    name: Delete branch
    needs: merge
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - run: git push origin --delete "$BRANCH"
